@page "/register-company"
@inject ApiService<CompanyCreateDto> CompanyService
@inject ApiService<LocationForPersonDto> LocationService
@inject NavigationManager NavigationManager;
@rendermode InteractiveServer

@if (locations == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="grid">
        <div class="col-md-6 m-auto">
            <h3>Register Company</h3>
            <form>
                <div class="mb-3">
                    <label for="locations" class="form-label">Locations:</label>
                    <select id="locations" multiple class="form-select" size="5" @onchange="HandleLocationSelection">
                        @foreach (var location in locations)
                        {
                            <option value="@location.Id">@location.City, @location.Country</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="userEmail" class="form-label">Email:</label>
                    <input type="text" id="userEmail" @bind="newCompany.Email" class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="userPassword" class="form-label">Password:</label>
                    <input type="password" id="userPassword" @bind="newCompany.Password" class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="companyName" class="form-label">Company Name:</label>
                    <input type="text" id="companyName" @bind="newCompany.Name" class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="companyDescription" class="form-label">Company Description:</label>
                    <input type="text" id="companyDescription" @bind="newCompany.Description" class="form-control" />
                </div>
                <button type="button" class="btn btn-primary" @onclick="AddCompany">Register</button>
            </form>
        </div>
        <div class="col-md-3"></div>
    </div>
}

@code {
    private CompanyCreateDto newCompany = new CompanyCreateDto();
    private List<LocationForPersonDto> locations = new List<LocationForPersonDto>(); // Initialize list
    private List<int> selectedLocationIds = new List<int>();

    protected override async Task OnInitializedAsync()
    {
        locations = await LocationService.GetEntities();
    }

    private void HandleLocationSelection(ChangeEventArgs e)
    {
        selectedLocationIds = ((IEnumerable<string>)e.Value).Select(int.Parse).ToList();
    }

    private async Task AddCompany()
    {
        try
        {
            newCompany.LocationIds = selectedLocationIds;

            var response = await CompanyService.CreateEntity(newCompany);
            response.EnsureSuccessStatusCode();

            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error registering company: {ex.Message}");
            // Handle the error appropriately (e.g., display error message to the user)
        }
    }
}
