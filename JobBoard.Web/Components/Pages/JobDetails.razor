@page "/jobs/{id:long}"
@inject ApiService<JobDto> JobViewService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<h3>Job Details</h3>

@if (job == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card">
        <div class="card-header">
            <h4>@job.Title</h4>
        </div>
        <div class="card-body">
            <p><b>Company:</b> @job.CompanyName</p>
            @* If salary is null, place "not specified" *@
            <p><b>Salary:</b>
                @if (job.Salary == null)
                {
                    <em> Not specified</em>
                }
                else
                {
                    @job.Salary
                }
            </p>

            <p><b>Contract Type:</b> @job.ContractType</p>
            <p><b>Work Model:</b> @job.WorkModel</p>
            <p><b>Description:</b> @job.Description</p>
            <b><p>Location/s:</p></b>
            <ul>
                @foreach (var locationName in job.LocationNames)
                {
                   <li>@locationName</li>
                }
            </ul>

            <b><p>Category/ies:</p></b>
            <ul>
                @foreach (var categoryName in job.CategoryNames)
                {
                    <li>@categoryName</li>
                }
            </ul>
        </div>
    </div>
}

@code {
    [Parameter]
    public long Id { get; set; }

    private JobDto job;

    protected override async Task OnInitializedAsync()
    {
        job = await JobViewService.GetEntityById(Id);
        if(job == null)
        {
            NavigationManager.NavigateTo("/");
        }
    }
}